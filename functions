# translation of the R code
# starting from the simplest

function vlag(X, p)
   ## This function create
    ## X = [x1 x2 ... xT]
    ## where
    ## x1 = (1 y_{t-1}' y_{t-2}' ... y_{t-p}')
  T = size(X)[1]
  m = size(X)[2]
  XX = reshape(zeros(Float64,T*m*p),T,m*p)
  # still didn't find a better the way to create matrices before filling them
  # could you give a hint on the differences between R and Julia in creating object before filling them?
  for i=1:p
    XX[(p+1):T, (m*(i-1)+1):(m*i)] = X[(p+1-i):(T-i), :]
  end
  XX
end

vlag(reshape(1:60,10,2*3), 2)

=========================================================

function setbvar (Y, p, h, constant, is.direct = false)
  if isdefined(:h)==false
    h = 1
  else
    if isdefined(:p)==false
      return("lag length should be > 0")
    else
      
      Yraw = reshape(Y, size(A)[1], size(A)[2])
      Traw = size(Y)[1]
      m = size(Y)[2]
      if is.direct
        Y1 = Yraw[(h+1-1):Traw, :]
        Y2 = Yraw[1:(Traw-h-1), :]
        Traw = Traw - h + 1
      else
        Y1 = Y2 = Yraw
      end
      
      # construct Y, X, Z
      # X is a (T x k)
      # Z is the block diagonal matrix
      
      
      
